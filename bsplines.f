      MODULE bsplines
      CONTAINS
      SUBROUTINE L2APPR ( T, N, K, NTAU, TAU, GTAU, WEIGHT,
     *          Q, DIAG, BCOEF )
C
CALLS SUBROUTINES BSPLVB, BCHFAC/SLV
C
CONSTRUCTS THE (WEIGHTED DISCRETE) L2-APPROXIMATION BY SPLINES OF ORDER
C  K WITH KNOT SEQUENCE T(1), .., T(N+K) TO GIVEN DATA POINTS
C  (TAU(I),GTAU(I)), I=1,...,NTAU. THE B-SPLINE COEFFICIENTS
C   B C O E F  OF THE APPROXIMATING SPLINE ARE DETERMINED FROM THE
C  NORMAL EQUATIONS USING CHOLESKY'S METHOD.
C
C***** I N P U T *****
C  T(1),...T(N+K)  THE KNOT SEQUENCE
C  N -- THE DIMENSION OF THE SPACE OF SPLINES OF ORDER K WITH KNOTS T.
C  K -- THE ORDER
C  NTAU -- NUMBER OF DATA POINTS
C  (TAU(I),GTAU(I)), I=1,...,NTAU ARE THE NTAU DATA POINTS TO BE
C       FITTED.
C  WEIGHT(I), I=1,...,NTAU ARE THE CORRESPONDING WEIGHTS.
C
C  W A R N I N G   -- THE RESTRICTION K .LE. KMAX (=20) IS IMPOSED
C       BY THE ARBITRARY DIMENSION STATEMENT FOR BIATX BELOW, BUT IS
C        N O W H E R E   C H E C K E D  FOR.
C
C***** W O R K   A R R A Y S ******
C  Q -- A WORK ARRAY OF SIZE (AT LEAST) K*N. iTS FIRST K ROWS ARE USED
C       FOR THE K LOWER DIAGONALS OF THE GRAMIAN MATRIX  C .
C  DIAG -- A WORK ARRAY OF LENGTH N USED IN BCHFAC.
C
C***** O U T P U T *****
C  BCOEF(1),...,BCOEF(N) THE B-SPLINE COEFFS. OF THE L2-APPR.
C
C***** M E T H O D *****
C  THE B-SPLINE COEFFICIENTS OF THE L2-APPR. ARE DETERMINED AS THE 
C  SOLUTION OF THE NORMAL EQUATIONS
C       SUM ((B(I),B(J))*BCOEF(J) : J=1,...N) = (B(I),G), I=1,...,N.
C
C  HERE, B(I) DENOTS THE I-TH B-SPLINE, G DENOTES THE FUNCTION TO
C  BE APPROXIMATED, AND THE INNER PRODUCT OF TWO FUNCTIONS F AND G
C  IS GIVEN BY
C     (F,G) := SUM (F(TAU(I))*G(TAU(I))*WEIGHT(I) : I=1,...,NTAU) .
C  THE RELEVANT FUNCTION VALUES OF THE B-SPLINES B(I), I=1,...,N, ARE
C  SUPPLIED BY THE SUBPROGRAM  BSPLVB .
C    THE COEFF. MATRIX C , WITH
C       C(I,J) := (B(I),B(J)), I,J=1,...,N,
C  OF THE NORMAL EQUATIONS IS SYMMETRIC AND (2*K-1)-BANDED, THEREFORE
C  CAN BE SPECIFIED BY GIVING ITS K BANDS AT OR BELOW THE DIAGONAL. FOR
C  I=1,...,N , WE STORE
C    (B(I),B(J)) = C(I,J) IN Q(I-J+1,J), J = I,...,MIN0(I+K-1,N)
C  AND THE RIGHT SIDE
C    (B(I),G) IN BCOEF(I).
C  SINCE B-SPLINE VALUES ARE MOST EFFICIENTLY GENERATED BY FINDING
C  SIMULANEOUSLY THE VALUE OF EVERY NONZERO B-SPLINE AT ONE POINT,
C  THE ENTRIES OF C (I.E., OF Q), ARE GENERATED BY COMPUTING, FOR
C  EACH LL, ALL THE TERMS INVOLVING TAU(LL) SIMULTANEOUSLY AND ADDING
C  THEM TO ALL RELEVANT ENTRIES.
C
        PARAMETER (KMAX=20)
        INTEGER K,N,I,J,JJ,LEFT,LEFTMK,LL,MM,NTAU
        !REAL*8 BCOEF(N),DIAG(N),Q(K,N),T(1),BIATX(KMAX),DW
        REAL BCOEF(N),DIAG(N),Q(K,N),T(*),BIATX(KMAX),DW
        REAL TAU(NTAU),GTAU(NTAU),WEIGHT(NTAU)
C
C       DIMENSION T(N+K)
C
        DO 7 J=1,N
          BCOEF(J) = 0.
          DO 7 I=1,K
7           Q(I,J) = 0.
        LEFT = K
        LEFTMK = 0
        DO 20 LL=1,NTAU
C               LOCATE LEFT S.T. TAU(LL) IN (T(LEFT),T(LEFT+1))
10        IF (LEFT .EQ. N) GO TO 15
          IF (TAU(LL) .LT. T(LEFT+1)) GO TO 15
          LEFT = LEFT+1
          LEFTMK = LEFTMK + 1
          GO TO 10
C
15        CALL BSPLVB (T,K,1,TAU(LL),LEFT,BIATX)
C
C       BIATX(MM) CONTAINS THE VALUE OF B(LEFT-K+MM) AT TAU(LL).
C       HENCE, WITH DW := BIATX(MM)*WEIGHT(LL), THE NUMBER DW*GTAU(LL)
C       IS A SUMMAND IN THE INNER PRODUCT
C         (B(LEFT-K+MM),G) WHICH GOES INTO BCOEF(LEFT-K+MM)
C       AND THE NUMBER BIATX(JJ)*DW IS A SUMMAND IN THE INNER PRODUCT
C         (B(LEFT-K+JJ),B(LEFT-K+MM)), INTO Q(JJ-MM+1,LEFT-K+MM)
C       SINCE (LEFT-K+JJ) - (LEFT-K+MM) + 1 = JJ - MM + 1 .
C
          DO 20 MM=1,K
            DW = BIATX(MM)*WEIGHT(LL)
            J = LEFTMK + MM
            BCOEF(J) = DW*GTAU(LL) + BCOEF(J)
            I = 1
            DO 20 JJ = MM,K
                Q(I,J) = BIATX(JJ)*DW + Q(I,J)
20              I=I+1
C
C       CONSTRUCT CHOLESKY FACTORIZATION FOR C IN Q, THEN USE
C       IT TO SOLVE THE NORMAL EQUATIONS
C         C*X = BCOEF
C       FOR X , AND STORE X IN BCOEF .
C
        CALL BCHFAC (Q,K,N,DIAG)
        CALL BCHSLV (Q,K,N,BCOEF)
        RETURN
        END SUBROUTINE L2APPR

        SUBROUTINE BSPLVB ( T, JHIGH, INDEX, X, LEFT, BIATX )
CALCULATES THE VALUE OF ALL POSSIBLY NONZERO B-SPLINES AT  X  OF ORDER
C
C               JOUT  =  MAX( JHIGH , (J+1)*(INDEX-1) )
C
C  WITH KNOT SEQUENCE  T .
C
C******  I N P U T  ******
C  T.....KNOT SEQUENCE, OF LENGTH  LEFT + JOUT  , ASSUMED TO BE NONDE-
C        CREASING.  A S S U M P T I O N . . . .
C                       T(LEFT)  .LT.  T(LEFT + 1)   .
C   D I V I S I O N  B Y  Z E R O  WILL RESULT IF  T(LEFT = T(LEFT+1)
C  JHIGH,
C  INDEX.....INTEGERS WHICH DETERMINE THE ORDER  JOUT = MAX(JHIGH,
C        (J+1)*(INDEX-1))  OF THE B-SPLINES WHOSE VALUES AT  X  ARE TO
C        BE RETURNED.  INDEX  IS USED TO AVOID RECALCULATIONS WHEN SEVE-
C        RAL COLUMNS OF THE TRIANGULAR ARRAY OF B-SLPINE VALUES ARE NEE-
C        DED (E.G., IN  BVALUE  OR IN  BSPLVD ). PRECISELY,
C                     IF  INDEX = 1 ,
C        THE CALCULATION STARTS FROM SCRATCH AND THE ENTIRE TRIANGULAR
C        ARRAY OF B-SPLINE VALUES OF ORDERS 1,2,...,JHIGH  IS GENERATED
C        ORDER BY ORDER , I.E., COLUMN BY COLUMN .
C                     IF  INDEX = 2 ,
C        ONLY THE B-SPLINE VALUES OF ORDER  J+1, J+2, ..., JOUT  ARE GE-
C        NERATED, THE ASSUMPTION BEING THAT  BIATX , J , DELTAL , DELTAR
C        ARE, ON ENTRY, AS THEY WERE ON EXIT AT THE PREVIOUS CALL.
C           IN PARTICULAR, IF  JHIGH = 0, THEN  JOUT = J+1, I.E., JUST
C        THE NEXT COLUMN OF B-SPLINE VALUES IS GENERATED.
C
C  W A R N I N G . . .  THE RESTRICTION   JOUT .LE. JMAX (= 20)  IS IM-
C        POSED ARBITRARILY BY THE DIMENSION STATEMENT FOR  DELTAL  AND
C        DELTAR  BELOW, BUT IS  N O W H E R E  C H E C K E D  FOR .
C
C  X.....THE POINT AT WHICH THE B-SPLINES ARE TO BE EVALUATED.
C  LEFT.....AN INTEGER CHOSEN (USUALLY) SO THAT
C                  T(LEFT) .LE. X .LE. T(LEFT+1)  .
C
C******  O U T P U T  ******
C  BIATX.....ARRAY OF LENGTH  JOUT , WITH  BIATX(I)  CONTAINING THE VAL-
C        UE AT  X  OF THE POLYNOMIAL OF ORDER  JOUT WHICH AGREES WITH
C        THE B-SPLINE  B(LEFT-JOUT+I,JOUT,T)  ON THE INTERVAL (T(LEFT),
C        T(LEFT+1)) .
C
C******  M E T H O D  ******
C  THE RECURRENCE RELATION
C
C                       X - T(I)              T(I+J+1) - X
C     B(I,J+1)(X)  =  -----------B(I,J)(X) + ---------------B(I+1,J)(X)
C                     T(I+J)-T(I)            T(I+J+1)-T(I+1)
C
C  IS USED (REPEATEDLY) TO GENERATE THE (J+1)-VECTOR  B(LEFT-J,J+1)(X),
C  ...,B(LEFT,J+1)(X)  FROM THE J-VECTOR  B(LEFT-J+1,J)(X),...,
C  B(LEFT,J)(X), STORING THE NEW VALUES IN  BIATX  OVER THE OLD.  THE
C  FACTS THAT
C            B(I,1) = 1  IF  T(I) .LE. X .LT. T(I+1)
C  AND THAT
C            B(I,J)(X) = 0  UNLESS  T(I) .LE. X .LT. T(I+J)
C  ARE USED. THE PARTICULAR ORGANIZATION OF THE CALCULATIONS FOLLOWS AL-
C  GORITHM  (8)  IN CHAPTER X OF THE TEXT.
C
      INTEGER INDEX,JHIGH,LEFT,   I,J,JP1
      !REAL*8 BIATX(JHIGH),T(1),X,   DELTAL(20),DELTAR(20),SAVED,TERM
      REAL BIATX(JHIGH),T(*),X,   DELTAL(20),DELTAR(20),SAVED,TERM
C     DIMENSION BIATX(JOUT), T(LEFT+JOUT)
CURRENT FORTRAN STANDARD MAKES IT IMPOSSIBLE TO SPECIFY THE LENGTH OF
C  T  AND OF  BIATX  PRECISELY WITHOUT THE INTRODUCTION OF OTHERWISE
C  SUPERFLUOUS ADDITIONAL ARGUMENTS.
C      DATA J/1/
C     SAVE J,DELTAL,DELTAR (VALID IN FORTRAN 77)
C
                                        GO TO (10,20), INDEX
   10 J = 1
      BIATX(1) = 1.
      IF (J .GE. JHIGH)                 GO TO 99
C
   20    JP1 = J + 1
         DELTAR(J) = T(LEFT+J) - X
         DELTAL(J) = X - T(LEFT+1-J)
         SAVED = 0.
         DO 26 I=1,J
            TERM = BIATX(I)/(DELTAR(I) + DELTAL(JP1-I))
            BIATX(I) = SAVED + DELTAR(I)*TERM
   26       SAVED = DELTAL(JP1-I)*TERM
         BIATX(JP1) = SAVED
         J = JP1
         IF (J .LT. JHIGH)              GO TO 20
C
   99                                   RETURN
      END SUBROUTINE BSPLVB

      SUBROUTINE BCHFAC (W,NBANDS,NROW,DIAG)
C
CONSTRUCTS CHOLESKY FACTORIZATION
C                       C = L * D * L-TRANSPOSE
C  WITH L UNIT LOWER TRIANGULAR AND D DIAGONAL, FOR GIVEN MATRIX C OF
C  ORDER  N R O W , IN CASE C IS (SYMMETRIC) POSITIVE SEMIDEFINITE
C  AND BANDED, HAVING  N B A N D S  DIAGONALS AT AND BELOW THE MAIN DIAGONAL.
C
C***** I N P U T *****
C  NROW -- IS THE ORDER OF THE MATRIX C.
C  NBANDS -- INDICATES ITS BANDWIDTH, I.E.,
C       C(I,J) = 0 FOR ABS(I-J) .GE. NBANDS .
C  W -- WORKARRAY OF SIZE (NBANDS,NROW) CONTAINING THE NBANDS DIAGONALS
C       IN ITS ROWS, WITH THE MAIN DIAGONAL IN ROW 1. pRECISELY,
C       W(I,J) CONTAINS C(I+J-1,J), I=1,...,NBANDS, J=1,...,NROW.
C         FOR EXAMPLE, THE INTERESTING ENTRIES OF A SEVEN DIAGONAL 
C       SYMMETRIC MATRIX C OF ORDER 9 WOULD BE STORED IN W AS
C
C               11 22 33 44 55 66 77 88 99
C               21 32 43 54 65 76 87 98
C               31 42 53 64 75 86 97
C               41 52 63 74 85 96
C
C       ALL OTHER INTRIES OF W NOT IDENTIFIED IN THIS WAY WITH AN
C       ENTRY OF C ARE NEVER REFERENCED .
C  DIAG -- IS A WORK ARRAY OF LENGTH NROW .
C
C***** O U T P U T *****
C  W -- CONTAINS THE CHOLESKY FACTORIZATION C = L*D*L-TRANSP, WITH
C       W(1,I) CONTAINING 1/D(I,I)
C       AND W(I,J) CONTAINING L(I-1+J,J), I=2,...,NBANDS.
C
C***** M E T H O D *****
C  GAUSS ELIMINATION, ADAPTED TO THE SYMMETRY AND BANDEDNESS OF C, IS
C  USED.
C    NEAR ZERO PIVOTS ARE HANDLED IN A SPECIAL WAY. THE DIAGONAL ELE-
C  MENT C(N,N)=W(1,N) IS SAVED INITIALLY IN DIAG(N), ALL N. AT THE N-TH
C  ELIMINATION STEP, THE CURRENT PIVOT ELEMENT, VIZ. W(1,N), IS COM-
C  PARED WITH ITS ORIGINAL VALUE, DIAG(N). IF, AS THE RESULT OF PRIOR
C  ELIMINATION STEPS, THIS ELEMENT HAS BEEN REDUCED BY ABOUT A WORD
C  LENGTH, (I.E., IF W(1,N)+DIAG(N) .LE. DIAG(N)), THEN THE PIVOT IS
C  DECLARED TO BE ZERO, AND THE ENTIRE N-TH ROW IS DECLARED TO BE LIN-
C  EARLY DEPENDENT ON THE PRECEDING ROWS. THIS HAS THE EFFECT OF PRO-
C  DUCING X(N)=0 WHEN SOLVING C*X=B FOR X, REGARDLESS OF B. JUSTIFIC-
C  ATION FOR THIS IS AS FOLLOWS. IN CONTEMPLATED APPLICATIONS OF THIS
C  PROGRAM, THE GIVEN EQUATIONS ARE THE NORMAL EQUATIONS FOR SOME LEAST
C  SQUARES APPROXIMATION PROBLEM, DIAG(N)=C(N,N) GIVES THE NORM-SQUARE
C  OF THE N-TH BASIS FUNCTION, AND, AT THIS POINT, W(1,N) CONTAINS THE
C  NORM-SQUARE OF THE ERROR IN THE LEAST-SQUARES APPROXIMATION TO THE
C  N-TH BASIS FUNCTION BY LINEAR COMBINATIONS OF THE FIRST N-1. HAVING
C  W(1,N)+DIAG(N) .LE. DIAG(N) SIGNIFIES THAT THE N-TH FUNCTION IS LIN-
C  EARLY DEPENDENT TO MACHINE ACCURACY ON THE FIRST N-1 FUNCTIONS, 
C  THEREFORE CAN SAFELY BE LEFT OUT FROM THE BASIS OF APPROXIMATING
C  FUNCTIONS.
C    THE SOLUTION OF A LINEAR SYSTEM
C               C*X = B
C  IS EFFECTED BY THE SUCCESSION OF THE FOLLOWING TWO CALLS:
C    CALL BCHFAC (W,NBANDS,NROW,DIAG)  , TO GET FACTORIZATION;
C    CALL BCHSLV (W,NBANDS,NROW,B,X)   , TO SOLVE FOR X.
C
        INTEGER NBANDS,NROW,I,IMAX,J,JMAX,N
        !REAL*8 W(NBANDS,NROW),DIAG(NROW),RATIO
        REAL W(NBANDS,NROW),DIAG(NROW),RATIO
C
        IF (NROW .GT. 1) GO TO 9
        IF (W(1,1) .GT. 0.) W(1,1) = 1./W(1,1)
        RETURN
C               STORE DIAGONAL OF C IN DIAG.
9       DO 10 N=1,NROW
10        DIAG(N) = W(1,N)
C               FACTORIZATION.
        DO 20 N=1,NROW
          IF (W(1,N)+DIAG(N) .GT. DIAG(N)) GO TO 15
          DO 14 J=1,NBANDS
14          W(J,N) = 0.
            GO TO 20
15          W(1,N) = 1./W(1,N)
            IMAX = MIN0(NBANDS-1,NROW-N)
            IF (IMAX .LT. 1) GO TO 20
            JMAX = IMAX
            DO 18 I=1,IMAX
                RATIO = W(I+1,N)*W(1,N)
                DO 17 J=1,JMAX
17                W(J,N+I) = W(J,N+I)-W(J+I,N)*RATIO
                JMAX = JMAX-1
18              W(I+1,N) = RATIO
20      CONTINUE
C
        RETURN
        END SUBROUTINE BCHFAC

        SUBROUTINE BCHSLV (W,NBANDS,NROW,B)
C
C  SOLVES THE LINEAR SYSTEM  C*X=B  OF ORDER  N R O W  FOR X PROVIDED
C  W CONTAINS THE CHOLESKY FACTORIZATION FOR THE BANDED (SYMMETRIC)
C  POSITIVE DEFINITE MATRIX C AS CONSTRUCTED IN THE SUBROUTINE
C   BCHFAC (QUO VIDE) .
C
C***** I N P U T *****
C  NROW -- IS THE ORDER OF THE MATRIX C .
C  NBANDS -- INDICATES THE BANDWIDTH OF C .
C  W -- CONTAINS THE CHOLESKY FACTORIZATION FOR C, AS OUTPUT FROM
C       SUBROUTINE BCHFAC (QUO VIDE) .
C  B -- THE VECTOR OF LENGTH  N R O W  CONTAINING THE RIGHT SIDE.
C
C***** O U T P U T *****
C  B -- THE VECTOR OF LENGTH  N R O W  CONTAINING THE SOLUTION .
C
C***** M E T H O D *****
C  WITH THE FACTORIZATION C = L*D*L-TRANSPOSE AVAILABLE, WHERE L IS
C  UNIT LOWER TRIANGULAR AND D IS DIAGONAL, THE TRIANGULAR SYSTEM
C  L*Y = B IS SOLVED FOR Y (FORWARD SUBSTITUTION), Y IS STORED IN B,
C  THE VECTOR D**(-1)*Y IS COMPUTED AND STORED IN B, THEN THE TRIANG-
C  ULAR SYSTEM L-TRANSPOSE*X = D**(-1)*Y IS SOLVED FOR X (BACK SUBSTIT-
C  UTION).
C
        INTEGER NBANDS,NROW,J,JMAX,N,NBNDM1
        !REAL*8 W(NBANDS,NROW),B(NROW)
        REAL W(NBANDS,NROW),B(NROW)
        IF (NROW .GT. 1) GO TO 21
        B(1) = B(1) * W(1,1)
        RETURN
C
C         FORWARD SUBSTITUTION. SOLVE L*Y = B FOR Y, STORE IN B.
21      NBNDM1 = NBANDS - 1
        DO 30 N=1,NROW
          JMAX = MIN0(NBNDM1,NROW-N)
          IF (JMAX .LT. 1) GO TO 30
          DO 25 J=1,JMAX
25          B(J+N) = B(J+N) - W(J+1,N)*B(N)
30      CONTINUE
C
C       BACK SUBSTITUTION. SOLVE L-TRANSPOSE*X = D**(-1)*Y FOR X, STORE IN B 
C
        DO 40 N=NROW,1,-1
          B(N) = B(N)*W(1,N)
          JMAX = MIN0(NBNDM1,NROW-N)
          IF (JMAX .LT. 1) GO TO 40
          DO 35 J=1,JMAX
35          B(N) = B(N) - W(J+1,N)*B(J+N)
40      CONTINUE
C
        RETURN
        END SUBROUTINE BCHSLV

        !DOUBLE PRECISION FUNCTION BVALUE ( T, BCOEF, N, K, X, JDERIV )
        REAL FUNCTION BVALUE ( T, BCOEF, N, K, X, JDERIV, LEFT, MFLAG )
CALLS  INTERV
C
CALCULATES VALUE AT  X  OF  JDERIV-TH DERIVATIVE OF SPLINE FROM B-REPR.
C  THE SPLINE IS TAKEN TO BE CONTINUOUS FROM THE RIGHT.
C
C******  I N P U T  ******
C  T, BCOEF, N, K......FORMS THE B-REPRESENTATION OF THE SPLINE  F  TO
C        BE EVALUATED. SPECIFICALLY,
C  T.....KNOT SEQUENCE, OF LENGTH  N+K, ASSUMED NONDECREASING.
C  BCOEF.....B-COEFFICIENT SEQUENCE, OF LENGTH  N .
C  N.....LENGTH OF BCOEF AND DIMENSION OF SPLINE(K,T),
C        A S S U M E D  POSITIVE .
C  K.....ORDER OF THE SPLINE .
C
C  W A R N I N G . . .   THE RESTRICTION  K .LE. KMAX (=20)  IS IMPOSED
C        ARBITRARILY BY THE DIMENSION STATEMENT FOR  AJ, DL, DR  BELOW,
C        BUT IS  N O W H E R E  C H E C K E D  FOR.
C
C  X.....THE POINT AT WHICH TO EVALUATE .
C  JDERIV.....INTEGER GIVING THE ORDER OF THE DERIVATIVE TO BE EVALUATED
C        A S S U M E D  TO BE ZERO OR POSITIVE.
C
C******  O U T P U T  ******
C  BVALUE.....THE VALUE OF THE (JDERIV)-TH DERIVATIVE OF  F  AT  X .
C
C******  M E T H O D  ******
C   THE NONTRIVIAL KNOWN INTERVAL  (T(I),T(I+1))  CONTAINING  X  IS LO-
C  CATED WITH THE AID OF  INTERV . THE  K  B-COEFFS OF  F  RELEVANT FOR
C  THIS INTERVAL ARE THEN OBTAINED FROM  BCOEF (0R TAKEN TO BE ZERO IF
C  NOT EXPLICITLY AVAILABLE) AND ARE THEN DIFFERENCED  JDERIV  TIMES TO
C  OBTAIN THE B-COEFFS OF  (D**JDERIV)F  RELEVANT FOR THAT INTERVAL.
C  PRECISELY, WITH  J = JDERIV, WE HAVE FROM X.(12) OF THE TEXT THAT
C
C     (D**J)F  =  SUM ( BCOEF(.,J)*B(.,K-J,T) )
C
C  WHERE
C                   /BCOEF(.),                      ,  J.EQ. 0
C                   /
C    BCOEF(.,J)  =  /BCOEF(.,J-1) - BCOEF(.-1.J-1)
C                   /_____________________________ ,  J .GT.0
C                   /   (T(.+K-J) - T(.))/(K-J)
C
C    THEN, WE USE REPEATEDLY THE FACT THAT
C
C    SUM ( A(.)*B(.,M,T)(X) )  =  SUM ( A(.,X)*B(.,M-1,T)(X) )
C  WITH
C                 (X - T(.))*A(.) + (T(.+M-1) - X)*A(.-1)
C    A(.,X)  =    _______________________________________
C                 (X - T(.))      + (T(.+M-1) - X)
C
C  TO WRITE  (D**J)F(X)  EVENTUALLY AS A LINEAR COMBINATION OF B-SPLINES
C  OF ORDER  1 , AND THE COEFFICIENT FOR  B(I,1,T)(X)  MUST THEN BE THE
C  DESIRED NUMBER  (D**J)F(X).  (SEE X.(17)-(19) OF TEXT).
C
      INTEGER JDERIV,K,N,I,ILO,IMK,J,JC,JCMIN,JCMAX,JJ,KMJ,KM1,MFLAG
     *                     ,NMI
      INTEGER LEFT   ! rishu
      !REAL*8 BCOEF(N),T(1),X,   AJ(20),DL(20),DR(20),FKMJ
      REAL BCOEF(N),T(*),X,   AJ(20),DL(20),DR(20),FKMJ
C     DIMENSION T(N+K)
CURRENT FORTRAN STANDARD MAKES IT IMPOSSIBLE TO SPECIFY THE LENGTH OF  T
C  PRECISELY WITHOUT THE INTRODUCTION OF OTHERWISE SUPERFLUOUS ADDITION-
C  AL ARGUMENTS.
      BVALUE = 0.
      IF (JDERIV .GE. K)                GO TO 99
C
C  *** FIND  I   S.T.   1 .LE. I .LT. N+K   AND   T(I) .LT. T(I+1)   AND
C      T(I) .LE. X .LT. T(I+1) . IF NO SUCH I CAN BE FOUND,  X  LIES
C      OUTSIDE THE SUPPORT OF  THE SPLINE  F  AND  BVALUE = 0.
C      (THE ASYMMETRY IN THIS CHOICE OF  I  MAKES  F  RIGHTCONTINUOUS)
C
C rishu      CALL INTERV ( T, N+K, X, I, MFLAG )
      I = LEFT
      IF (MFLAG .NE. 0)                 GO TO 99
C  *** IF K = 1 (AND JDERIV = 0), BVALUE = BCOEF(I).
      KM1 = K - 1
      IF (KM1 .GT. 0)                   GO TO 1
      BVALUE = BCOEF(I)
                                        GO TO 99
C
C  *** STORE THE K B-SPLINE COEFFICIENTS RELEVANT FOR THE KNOW INTERVAL
C     (T(I),T(I+1)) IN AJ(1),...,AJ(K) AND COMPUTE DL(J) = X - T(I+1-J),
C     DR(J) = T(I+J) - X, J=1,...,K-1 . SET ANY OF THE AJ NOT OBTAINABLE
C     FROM INPUT TO ZERO.  SET ANY T.S NOT OBTAINABLE EQUAL TO T(1) OR
C     TO T(N+K) APPROPRIATELY.
    1 JCMIN = 1
      IMK = I - K
      IF (IMK .GE. 0)                   GO TO 8
      JCMIN = 1 - IMK
      DO 5 J=1,I
    5    DL(J) = X - T(I+1-J)
      DO 6 J=I,KM1
         AJ(K-J) = 0.
    6    DL(J) = DL(I)
                                        GO TO 10
    8 DO 9 J=1,KM1
    9    DL(J) = X - T(I+1-J)
C
   10 JCMAX = K
      NMI = N - I
      IF (NMI .GE. 0)                   GO TO 18
      JCMAX = K + NMI
      DO 15 J=1,JCMAX
   15    DR(J) = T(I+J) - X
      DO 16 J=JCMAX,KM1
         AJ(J+1) = 0.
   16    DR(J) = DR(JCMAX)
                                        GO TO 20
   18 DO 19 J=1,KM1
   19    DR(J) = T(I+J) - X
C
   20 DO 21 JC=JCMIN,JCMAX
   21    AJ(JC) = BCOEF(IMK + JC)
C
C               *** DIFFERENCE THE COEFFICIENTS  JDERIV  TIMES.
      IF (JDERIV .EQ. 0)                GO TO 30
      DO 23 J=1,JDERIV
         KMJ = K-J
         FKMJ = FLOAT(KMJ)
         ILO = KMJ
         DO 23 JJ=1,KMJ
            AJ(JJ) = ((AJ(JJ+1) - AJ(JJ))/(DL(ILO) + DR(JJ)))*FKMJ
   23       ILO = ILO - 1
C
C  *** COMPUTE VALUE AT  X  IN (T(I),T(I+1)) OF JDERIV-TH DERIVATIVE,
C     GIVEN ITS RELEVANT B-SPLINE COEFFS IN AJ(1),...,AJ(K-JDERIV).
   30 IF (JDERIV .EQ. KM1)              GO TO 39
      JTEMP1=JDERIV+1
      DO 33 J=JTEMP1,KM1
         KMJ = K-J
         ILO = KMJ
         DO 33 JJ=1,KMJ
            AJ(JJ) = (AJ(JJ+1)*DL(ILO) + AJ(JJ)*DR(JJ))/(DL(ILO)+DR(JJ))
   33       ILO = ILO - 1
   39 BVALUE = AJ(1)
C
   99                                   RETURN
      END FUNCTION BVALUE

      END MODULE bsplines
